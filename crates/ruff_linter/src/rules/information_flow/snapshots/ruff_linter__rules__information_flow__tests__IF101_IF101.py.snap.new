---
source: crates/ruff_linter/src/rules/information_flow/mod.rs
assertion_line: 24
---
IF101.py:18:11: IF101 Inconfidential assignment to more restrictive variable. Expression `bob_var` with label `{ bob }` is being assigned to `bob_var = alice_bob_var
` with label `{ alice, bob }`
   |
17 | # IF101: Fail - Information flow from {alice,bob} to {bob}
18 | bob_var = alice_bob_var
   |           ^^^^^^^^^^^^^ IF101
19 | 
20 | # IF101: Fail - public var are less restrictive than alice_bob_var
   |

IF101.py:21:14: IF101 Inconfidential assignment to more restrictive variable. Expression `public_var` with label `{}` is being assigned to `public_var = alice_bob_var
` with label `{ alice, bob }`
   |
20 | # IF101: Fail - public var are less restrictive than alice_bob_var
21 | public_var = alice_bob_var
   |              ^^^^^^^^^^^^^ IF101
22 | 
23 | # IF101: Fail - public var are less restrictive than bob_var
   |

IF101.py:24:14: IF101 Inconfidential assignment to more restrictive variable. Expression `public_var` with label `{}` is being assigned to `public_var = bob_var
` with label `{ bob }`
   |
23 | # IF101: Fail - public var are less restrictive than bob_var
24 | public_var = bob_var
   |              ^^^^^^^ IF101
25 | 
26 | # IF101: Success - Public variables can flow to more restrictive variables
   |

IF101.py:37:11: IF101 Inconfidential assignment to more restrictive variable. Expression `bob_var` with label `{ bob }` is being assigned to `bob_var = alice_bob_var + 1
` with label `{ alice, bob }`
   |
36 | # # IF101: Fail Information flow from b to a
37 | bob_var = alice_bob_var + 1
   |           ^^^^^^^^^^^^^^^^^ IF101
38 | 
39 | # # IF101: Success - Information flow from a to b
   |

IF101.py:52:12: IF101 Inconfidential assignment to more restrictive variable. Expression `bob_var` with label `{ bob }` is being assigned to `bob_var += alice_bob_var
` with label `{ alice, bob }`
   |
51 | # IF101: Fail Information flow from b to a
52 | bob_var += alice_bob_var
   |            ^^^^^^^^^^^^^ IF101
53 | 
54 | # IF101: Fail Information flow from b to a
   |

IF101.py:55:15: IF101 Inconfidential assignment to more restrictive variable. Expression `public_var` with label `{}` is being assigned to `public_var += bob_var
` with label `{ bob }`
   |
54 | # IF101: Fail Information flow from b to a
55 | public_var += bob_var
   |               ^^^^^^^ IF101
56 | 
57 | ## Annotated assignment - i.e ": int ="
   |

IF101.py:63:16: IF101 Inconfidential assignment to more restrictive variable. Expression `bob_var` with label `{ bob }` is being assigned to `bob_var: int = alice_bob_var
` with label `{ alice, bob }`
   |
62 | # IF101: Fail Information flow from b to a
63 | bob_var: int = alice_bob_var
   |                ^^^^^^^^^^^^^ IF101
64 | 
65 | # IF101: Success - Information flow from a to b
   |

IF101.py:84:11: IF101 Inconfidential assignment to more restrictive variable. Expression `bob_var` with label `{ bob }` is being assigned to `bob_var = [1, 2, alice_bob_var]
` with label `{ alice, bob }`
   |
83 | # IF101: Fail - Information flow from {alice,bob} to {bob}
84 | bob_var = [1, 2, alice_bob_var]
   |           ^^^^^^^^^^^^^^^^^^^^^ IF101
85 | 
86 | # IF101: Fail - Information flow from {bob} to {public}
   |

IF101.py:87:14: IF101 Inconfidential assignment to more restrictive variable. Expression `public_var` with label `{}` is being assigned to `public_var = [1, 2, bob_var]
` with label `{ bob }`
   |
86 | # IF101: Fail - Information flow from {bob} to {public}
87 | public_var = [1, 2, bob_var]
   |              ^^^^^^^^^^^^^^^ IF101
88 | 
89 | # Tuple assignment
   |

IF101.py:95:11: IF101 Inconfidential assignment to more restrictive variable. Expression `bob_var` with label `{ bob }` is being assigned to `bob_var = (1, 2, alice_bob_var)
` with label `{ alice, bob }`
   |
94 | # IF101: Fail - Information flow from {alice,bob} to {bob}
95 | bob_var = (1, 2, alice_bob_var)
   |           ^^^^^^^^^^^^^^^^^^^^^ IF101
96 | 
97 | # IF101: Fail - Information flow from {bob} to {public}
   |

IF101.py:98:14: IF101 Inconfidential assignment to more restrictive variable. Expression `public_var` with label `{}` is being assigned to `public_var = (1, 2, bob_var)
` with label `{ bob }`
    |
 97 | # IF101: Fail - Information flow from {bob} to {public}
 98 | public_var = (1, 2, bob_var)
    |              ^^^^^^^^^^^^^^^ IF101
 99 | 
100 | # Set assignment
    |

IF101.py:106:11: IF101 Inconfidential assignment to more restrictive variable. Expression `bob_var` with label `{ bob }` is being assigned to `bob_var = {1, 2, alice_bob_var}
` with label `{ alice, bob }`
    |
105 | # IF101: Fail - Information flow from {alice,bob} to {bob}
106 | bob_var = {1, 2, alice_bob_var}
    |           ^^^^^^^^^^^^^^^^^^^^^ IF101
107 | 
108 | # IF101: Fail - Information flow from {bob} to {public}
    |

IF101.py:109:14: IF101 Inconfidential assignment to more restrictive variable. Expression `public_var` with label `{}` is being assigned to `public_var = {1, 2, bob_var}
` with label `{ bob }`
    |
108 | # IF101: Fail - Information flow from {bob} to {public}
109 | public_var = {1, 2, bob_var}
    |              ^^^^^^^^^^^^^^^ IF101
110 | 
111 | # Dict assignment
    |

IF101.py:117:11: IF101 Inconfidential assignment to more restrictive variable. Expression `bob_var` with label `{ bob }` is being assigned to `bob_var = {1: 2, 3: alice_bob_var}
` with label `{ alice, bob }`
    |
116 | # IF101: Fail - Information flow from {alice,bob} to {bob}
117 | bob_var = {1: 2, 3: alice_bob_var}
    |           ^^^^^^^^^^^^^^^^^^^^^^^^ IF101
118 | 
119 | # IF101: Fail - Information flow from {bob} to {public}
    |

IF101.py:120:14: IF101 Inconfidential assignment to more restrictive variable. Expression `public_var` with label `{}` is being assigned to `public_var = {1: 2, 3: bob_var}
` with label `{ bob }`
    |
119 | # IF101: Fail - Information flow from {bob} to {public}
120 | public_var = {1: 2, 3: bob_var}
    |              ^^^^^^^^^^^^^^^^^^ IF101
121 | 
122 | ## TODO: var = func() Might be a separate rule
    |
