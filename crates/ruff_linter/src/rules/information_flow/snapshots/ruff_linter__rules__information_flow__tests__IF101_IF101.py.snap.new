---
source: crates/ruff_linter/src/rules/information_flow/mod.rs
assertion_line: 23
---
IF101.py:18:11: IF101 Inconfidential assignment to more restrictive variable. Expression `bob_var` with label `{ bob }` is being assigned to `bob_var = alice_bob_var
` with label `{ alice, bob }`
   |
17 | # IF001: Fail - Information flow from {alice,bob} to {bob}
18 | bob_var = alice_bob_var
   |           ^^^^^^^^^^^^^ IF101
19 | 
20 | # IF001: Fail - public var are less restrictive than alice_bob_var
   |

IF101.py:21:14: IF101 Inconfidential assignment to more restrictive variable. Expression `public_var` with label `{}` is being assigned to `public_var = alice_bob_var
` with label `{ alice, bob }`
   |
20 | # IF001: Fail - public var are less restrictive than alice_bob_var
21 | public_var = alice_bob_var
   |              ^^^^^^^^^^^^^ IF101
22 | 
23 | # IF001: Fail - public var are less restrictive than bob_var
   |

IF101.py:24:14: IF101 Inconfidential assignment to more restrictive variable. Expression `public_var` with label `{}` is being assigned to `public_var = bob_var
` with label `{ bob }`
   |
23 | # IF001: Fail - public var are less restrictive than bob_var
24 | public_var = bob_var
   |              ^^^^^^^ IF101
25 | 
26 | # IF001: Success - Public variables can flow to more restrictive variables
   |

IF101.py:40:11: IF101 Inconfidential assignment to more restrictive variable. Expression `bob_var` with label `{ bob }` is being assigned to `bob_var = alice_bob_var + 1
` with label `{ alice, bob }`
   |
39 | # # IF001: Success Information flow from b to a
40 | bob_var = alice_bob_var + 1
   |           ^^^^^^^^^^^^^^^^^ IF101
   |
