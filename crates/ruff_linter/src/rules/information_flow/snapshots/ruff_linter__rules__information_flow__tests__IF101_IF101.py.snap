---
source: crates/ruff_linter/src/rules/information_flow/mod.rs
---
IF101.py:18:1: IF101 Inconfidential assignment to more restrictive variable. Expression `bob_var` with label `{ bob }` is being assigned to `bob_var = alice_bob_var
` with label `{ alice, bob }`
   |
17 | # IF101: Fail - Information flow from {alice,bob} to {bob}
18 | bob_var = alice_bob_var
   | ^^^^^^^ IF101
19 | 
20 | # IF101: Fail - public var are less restrictive than alice_bob_var
   |

IF101.py:21:1: IF101 Inconfidential assignment to more restrictive variable. Expression `public_var` with label `{}` is being assigned to `public_var = alice_bob_var
` with label `{ alice, bob }`
   |
20 | # IF101: Fail - public var are less restrictive than alice_bob_var
21 | public_var = alice_bob_var
   | ^^^^^^^^^^ IF101
22 | 
23 | # IF101: Fail - public var are less restrictive than bob_var
   |

IF101.py:24:1: IF101 Inconfidential assignment to more restrictive variable. Expression `public_var` with label `{}` is being assigned to `public_var = bob_var
` with label `{ bob }`
   |
23 | # IF101: Fail - public var are less restrictive than bob_var
24 | public_var = bob_var
   | ^^^^^^^^^^ IF101
25 | 
26 | # IF101: Success - Public variables can flow to more restrictive variables
   |

IF101.py:37:1: IF101 Inconfidential assignment to more restrictive variable. Expression `bob_var` with label `{ bob }` is being assigned to `bob_var = alice_bob_var + 1
` with label `{ alice, bob }`
   |
36 | # # IF101: Fail Information flow from b to a
37 | bob_var = alice_bob_var + 1
   | ^^^^^^^ IF101
38 | 
39 | # # IF101: Success - Information flow from a to b
   |

IF101.py:52:1: IF101 Inconfidential assignment to more restrictive variable. Expression `bob_var` with label `{ bob }` is being assigned to `bob_var += alice_bob_var
` with label `{ alice, bob }`
   |
51 | # IF101: Fail Information flow from b to a
52 | bob_var += alice_bob_var
   | ^^^^^^^ IF101
53 | 
54 | # IF101: Fail Information flow from b to a
   |

IF101.py:55:1: IF101 Inconfidential assignment to more restrictive variable. Expression `public_var` with label `{}` is being assigned to `public_var += bob_var
` with label `{ bob }`
   |
54 | # IF101: Fail Information flow from b to a
55 | public_var += bob_var
   | ^^^^^^^^^^ IF101
56 | 
57 | ## Annotated assignment - i.e ": int ="
   |

IF101.py:63:1: IF101 Inconfidential assignment to more restrictive variable. Expression `bob_var` with label `{ bob }` is being assigned to `bob_var: int = alice_bob_var
` with label `{ alice, bob }`
   |
62 | # IF101: Fail Information flow from b to a
63 | bob_var: int = alice_bob_var
   | ^^^^^^^ IF101
64 | 
65 | # IF101: Success - Information flow from a to b
   |

IF101.py:74:1: IF101 Inconfidential assignment to more restrictive variable. Expression `public_var` with label `{}` is being assigned to `public_var = bob_var = alice_bob_var
` with label `{ alice, bob }`
   |
73 | # IF101: Fail - Information flow from {} to {bob}, {alice,bob}
74 | public_var = bob_var = alice_bob_var
   | ^^^^^^^^^^ IF101
75 | 
76 | ## Tuple assignment
   |

IF101.py:74:14: IF101 Inconfidential assignment to more restrictive variable. Expression `bob_var` with label `{ bob }` is being assigned to `public_var = bob_var = alice_bob_var
` with label `{ alice, bob }`
   |
73 | # IF101: Fail - Information flow from {} to {bob}, {alice,bob}
74 | public_var = bob_var = alice_bob_var
   |              ^^^^^^^ IF101
75 | 
76 | ## Tuple assignment
   |

IF101.py:84:16: IF101 Inconfidential assignment to more restrictive variable. Expression `bob_var` with label `{ bob }` is being assigned to `alice_bob_var, bob_var = 1, alice_bob_var
` with label `{ alice, bob }`
   |
83 | # IF101: Fail - Information flow from {alice,bob} to {bob}
84 | alice_bob_var, bob_var = 1, alice_bob_var
   |                ^^^^^^^ IF101
85 | alice_bob_var, bob_var = alice_bob_var
   |

IF101.py:85:16: IF101 Inconfidential assignment to more restrictive variable. Expression `bob_var` with label `{ bob }` is being assigned to `alice_bob_var, bob_var = alice_bob_var
` with label `{ alice, bob }`
   |
83 | # IF101: Fail - Information flow from {alice,bob} to {bob}
84 | alice_bob_var, bob_var = 1, alice_bob_var
85 | alice_bob_var, bob_var = alice_bob_var
   |                ^^^^^^^ IF101
   |

IF101.py:94:1: IF101 Inconfidential assignment to more restrictive variable. Expression `bob_var` with label `{ bob }` is being assigned to `bob_var = [1, 2, alice_bob_var]
` with label `{ alice, bob }`
   |
93 | # IF101: Fail - Information flow from {alice,bob} to {bob}
94 | bob_var = [1, 2, alice_bob_var]
   | ^^^^^^^ IF101
95 | 
96 | # IF101: Fail - Information flow from {bob} to {public}
   |

IF101.py:97:1: IF101 Inconfidential assignment to more restrictive variable. Expression `public_var` with label `{}` is being assigned to `public_var = [1, 2, bob_var]
` with label `{ bob }`
   |
96 | # IF101: Fail - Information flow from {bob} to {public}
97 | public_var = [1, 2, bob_var]
   | ^^^^^^^^^^ IF101
98 | 
99 | # Tuple assignment
   |

IF101.py:105:1: IF101 Inconfidential assignment to more restrictive variable. Expression `bob_var` with label `{ bob }` is being assigned to `bob_var = (1, 2, alice_bob_var)
` with label `{ alice, bob }`
    |
104 | # IF101: Fail - Information flow from {alice,bob} to {bob}
105 | bob_var = (1, 2, alice_bob_var)
    | ^^^^^^^ IF101
106 | 
107 | # IF101: Fail - Information flow from {bob} to {public}
    |

IF101.py:108:1: IF101 Inconfidential assignment to more restrictive variable. Expression `public_var` with label `{}` is being assigned to `public_var = (1, 2, bob_var)
` with label `{ bob }`
    |
107 | # IF101: Fail - Information flow from {bob} to {public}
108 | public_var = (1, 2, bob_var)
    | ^^^^^^^^^^ IF101
109 | 
110 | # Set assignment
    |

IF101.py:116:1: IF101 Inconfidential assignment to more restrictive variable. Expression `bob_var` with label `{ bob }` is being assigned to `bob_var = {1, 2, alice_bob_var}
` with label `{ alice, bob }`
    |
115 | # IF101: Fail - Information flow from {alice,bob} to {bob}
116 | bob_var = {1, 2, alice_bob_var}
    | ^^^^^^^ IF101
117 | 
118 | # IF101: Fail - Information flow from {bob} to {public}
    |

IF101.py:119:1: IF101 Inconfidential assignment to more restrictive variable. Expression `public_var` with label `{}` is being assigned to `public_var = {1, 2, bob_var}
` with label `{ bob }`
    |
118 | # IF101: Fail - Information flow from {bob} to {public}
119 | public_var = {1, 2, bob_var}
    | ^^^^^^^^^^ IF101
120 | 
121 | # Dict assignment
    |

IF101.py:127:1: IF101 Inconfidential assignment to more restrictive variable. Expression `bob_var` with label `{ bob }` is being assigned to `bob_var = {1: 2, 3: alice_bob_var}
` with label `{ alice, bob }`
    |
126 | # IF101: Fail - Information flow from {alice,bob} to {bob}
127 | bob_var = {1: 2, 3: alice_bob_var}
    | ^^^^^^^ IF101
128 | 
129 | # IF101: Fail - Information flow from {bob} to {public}
    |

IF101.py:130:1: IF101 Inconfidential assignment to more restrictive variable. Expression `public_var` with label `{}` is being assigned to `public_var = {1: 2, 3: bob_var}
` with label `{ bob }`
    |
129 | # IF101: Fail - Information flow from {bob} to {public}
130 | public_var = {1: 2, 3: bob_var}
    | ^^^^^^^^^^ IF101
131 | 
132 | ## TODO: var = func() Might be a separate rule
    |
